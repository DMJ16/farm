/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IUniswapV2Pipe } from "../IUniswapV2Pipe";

export class IUniswapV2Pipe__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUniswapV2Pipe {
    return new Contract(address, _abi, signerOrProvider) as IUniswapV2Pipe;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_toWhomToIssue",
        type: "address",
      },
      {
        internalType: "address",
        name: "_incomingUniV2Exchange",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_IncomingLPT",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_toUniV2Exchange",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minPoolTokens",
        type: "uint256",
      },
    ],
    name: "PipeUniV2",
    outputs: [
      {
        internalType: "uint256",
        name: "lptReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_toWhomToIssue",
        type: "address",
      },
      {
        internalType: "address",
        name: "_incomingUniV2Exchange",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_IncomingLPT",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_toUniV2Exchange",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minPoolTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_approvalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "PipeUniV2WithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];
