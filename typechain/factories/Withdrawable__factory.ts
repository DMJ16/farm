/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Withdrawable } from "../Withdrawable";

export class Withdrawable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Withdrawable> {
    return super.deploy(overrides || {}) as Promise<Withdrawable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Withdrawable {
    return super.attach(address) as Withdrawable;
  }
  connect(signer: Signer): Withdrawable__factory {
    return super.connect(signer) as Withdrawable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Withdrawable {
    return new Contract(address, _abi, signerOrProvider) as Withdrawable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenAddresses",
        type: "address[]",
      },
    ],
    name: "batchWithdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_destinationAddress",
        type: "address",
      },
    ],
    name: "withdrawAmountToAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b610b518061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806362ea89fe14610067578063715018a61461010c57806389476069146101145780638da5cb5b1461013a578063dc16a8491461015e578063f2fde38b14610194575b600080fd5b61010a6004803603602081101561007d57600080fd5b81019060208101813564010000000081111561009857600080fd5b8201836020820111156100aa57600080fd5b803590602001918460208302840111640100000000831117156100cc57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506101ba945050505050565b005b61010a610246565b61010a6004803603602081101561012a57600080fd5b50356001600160a01b03166102e8565b610142610464565b604080516001600160a01b039092168252519081900360200190f35b61010a6004803603606081101561017457600080fd5b506001600160a01b03813581169160208101359160409091013516610473565b61010a600480360360208110156101aa57600080fd5b50356001600160a01b0316610631565b6101c2610729565b6000546001600160a01b03908116911614610212576040805162461bcd60e51b81526020600482018190526024820152600080516020610ad2833981519152604482015290519081900360640190fd5b60005b81518110156102425761023a82828151811061022d57fe5b60200260200101516102e8565b600101610215565b5050565b61024e610729565b6000546001600160a01b0390811691161461029e576040805162461bcd60e51b81526020600482018190526024820152600080516020610ad2833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6102f0610729565b6000546001600160a01b03908116911614610340576040805162461bcd60e51b81526020600482018190526024820152600080516020610ad2833981519152604482015290519081900360640190fd5b6000306001600160a01b038316610391576040516001600160a01b038216319250339083156108fc029084906000818181858888f1935050505015801561038b573d6000803e3d6000fd5b5061041f565b604080516370a0823160e01b81526001600160a01b038381166004830152915185928316916370a08231916024808301926020929190829003018186803b1580156103db57600080fd5b505afa1580156103ef573d6000803e3d6000fd5b505050506040513d602081101561040557600080fd5b5051925061041d6001600160a01b038216338561072d565b505b6040805183815290516001600160a01b0385169133917f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d12720999181900360200190a3505050565b6000546001600160a01b031690565b61047b610729565b6000546001600160a01b039081169116146104cb576040805162461bcd60e51b81526020600482018190526024820152600080516020610ad2833981519152604482015290519081900360640190fd5b604080516370a0823160e01b81523060048201819052915185929185916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561051857600080fd5b505afa15801561052c573d6000803e3d6000fd5b505050506040513d602081101561054257600080fd5b505110156105815760405162461bcd60e51b8152600401808060200182810382526031815260200180610aa16031913960400191505060405180910390fd5b6001600160a01b0385166105cb576040516001600160a01b0384169085156108fc029086906000818181858888f193505050501580156105c5573d6000803e3d6000fd5b506105df565b6105df6001600160a01b038316848661072d565b846001600160a01b0316836001600160a01b03167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099866040518082815260200191505060405180910390a35050505050565b610639610729565b6000546001600160a01b03908116911614610689576040805162461bcd60e51b81526020600482018190526024820152600080516020610ad2833981519152604482015290519081900360640190fd5b6001600160a01b0381166106ce5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a556026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261077f908490610784565b505050565b60606107d9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108359092919063ffffffff16565b80519091501561077f578080602001905160208110156107f857600080fd5b505161077f5760405162461bcd60e51b815260040180806020018281038252602a815260200180610af2602a913960400191505060405180910390fd5b6060610844848460008561084e565b90505b9392505050565b60608247101561088f5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a7b6026913960400191505060405180910390fd5b610898856109aa565b6108e9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106109285780518252601f199092019160209182019101610909565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461098a576040519150601f19603f3d011682016040523d82523d6000602084013e61098f565b606091505b509150915061099f8282866109b0565b979650505050505050565b3b151590565b606083156109bf575081610847565b8251156109cf5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a19578181015183820152602001610a01565b50505050905090810190601f168015610a465780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c42616c616e6365206973206c657373207468616e20726571756573746564207769746864726177616c205f616d6f756e744f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220b243f7e0daaeca448ceff3ee361e442b26390d4bab5d9a9dc90e97681773e8f864736f6c63430007050033";
